# Generated by Django 5.2.7 on 2025-10-24 00:03

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Nombre de Categoría')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=150, unique=True, verbose_name='Nombre del Proveedor')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Correo Electrónico')),
                ('direccion', models.TextField(blank=True, verbose_name='Dirección')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoMoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, help_text='Ej: Trabajo, Cuatrimoto, Semiautomática, Deportiva', max_length=50, unique=True, verbose_name='Tipo de Moto')),
            ],
            options={
                'verbose_name': 'Tipo de Moto',
                'verbose_name_plural': 'Tipos de Moto',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(db_index=True, max_length=200, verbose_name='Nombre del Producto')),
                ('descripcion', models.TextField(blank=True, help_text='Detalles adicionales del producto (opcional).', verbose_name='Descripción')),
                ('sku', models.CharField(blank=True, db_index=True, help_text='Código único interno para identificar el producto en el taller.', max_length=50, null=True, unique=True, verbose_name='SKU (Código Interno)')),
                ('codigo_barras', models.CharField(blank=True, db_index=True, help_text='Código de barras EAN/UPC del producto, si lo tiene.', max_length=100, null=True, unique=True, verbose_name='Código de Barras (Fabricante)')),
                ('marca', models.CharField(blank=True, db_index=True, max_length=100, verbose_name='Marca')),
                ('stock_actual', models.PositiveIntegerField(default=0, help_text='Cantidad de unidades disponibles en inventario.', verbose_name='Stock Actual')),
                ('stock_minimo', models.PositiveIntegerField(default=0, help_text='Cantidad mínima antes de necesitar reordenar.', verbose_name='Stock Mínimo')),
                ('precio_compra', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo al que se adquirió el producto.', max_digits=10, verbose_name='Precio de Compra')),
                ('precio_venta', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Precio al que se vende el producto al público.', max_digits=10, verbose_name='Precio de Venta')),
                ('creado_en', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('actualizado_en', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productos', to='inventario.categoria', verbose_name='Categoría')),
                ('proveedor', models.ForeignKey(blank=True, help_text='Proveedor al que se le compra este producto.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos', to='inventario.proveedor', verbose_name='Proveedor')),
                ('tipo_moto', models.ForeignKey(blank=True, help_text='Opcional: Selecciona si este producto es específico para un tipo de moto.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos', to='inventario.tipomoto', verbose_name='Aplica a Tipo de Moto')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['nombre'],
            },
        ),
    ]
